{{define "base"}}
    <!doctype html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Landing Page</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs5.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" href="/static/css/styles.css">
        {{block "css" .}}

        {{end}}
    </head>
    <body class="overflow-hidden">
    <nav class="navbar navbar-expand-lg bg-body-tertiary bg-dark sticky-top" data-bs-theme="dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Navbar</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Rooms
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/rooms/generals-quarters">Generals Quarters</a></li>
                            <li><a class="dropdown-item" href="/rooms/majors-suite">Majors Suite</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/search-availability">Book Now!</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/contact">Contact</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    {{block "content" .}}

    {{end}}
    <div class="row my-footer">
        <div class="col text-center">
            Left
        </div>
        <div class="col text-center">
            Middle
        </div>
        <div class="col text-center">
            Right
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()

        function notify(msg, msgType) {
            notie.alert({
                type: msgType,
                text: msg,
            });
        }

        function notifyModal(title, text, icon, confirmationButtonText) {
            Swal.fire({
                title: title,
                html: text,
                icon: icon,
                confirmButtonText: confirmationButtonText,
            })
        }

        {{with .ErrorMsg}}
            notify("{{.}}", "error")
        {{end}}

        {{with .FlashMsg}}
            notify("{{.}}", "success")
        {{end}}

        {{with .WarningMsg}}
            notify("{{.}}", "warning")
        {{end}}

        function Prompt() {
            let toast = function(c) {
                const {
                    msg = "",
                    icon = "success",
                    position = "top-end",
                } = c;

                const Toast = Swal.mixin({
                    toast: true,
                    title: msg,
                    position: position,
                    icon: icon,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                });

                Toast.fire({});
            }

            let success = function(c) {
                const {
                    msg = "",
                    title = "",
                    footer= "",
                } = c;

                Swal.fire({
                    icon: 'success',
                    title: title,
                    text: msg,
                    footer: footer,
                });
            }

            let error = function(c) {
                const {
                    msg = "",
                    title = "",
                    footer= "",
                } = c;

                Swal.fire({
                    icon: 'error',
                    title: title,
                    text: msg,
                    footer: footer,
                });
            }

            async function reservationDatesPicker(c) {
                const {
                    body = "",
                    title = "",
                    callback = undefined,
                    willOpen = undefined,
                    preConfirm = undefined,
                    didOpen = undefined,
                } = c;

                const { value: result } = await Swal.fire({
                    title: title,
                    html: body,
                    backdrop: false,
                    focusConfirm: false,
                    showCancelButton: true,
                    willOpen: (popupDOM) => {
                        if (c.willOpen !== undefined) {
                            c.willOpen(popupDOM);
                        }
                    },
                    preConfirm: (data) => {
                      if (c.preConfirm !== undefined) {
                          return c.preConfirm(data);
                      }
                    },
                    didOpen: (popupDOM) => {
                        if (c.didOpen !== undefined) {
                            c.didOpen(popupDOM);
                        }
                    }
                });

                if (result) {
                    // Make an AJAX call to the server and process returned JSON.
                    if (result.dismiss !== Swal.DismissReason.cancel) {
                       if (result.value !== "") {
                           if (c.callback !== undefined) {
                               c.callback(result);
                           }
                       } else {
                           c.callback(false);
                       }
                    } else {
                        c.callback(false);
                    }
                }
            }

            return {
                toast: toast,
                success: success,
                error: error,
                reservationDatesPicker: reservationDatesPicker,
            }
        }
    </script>
    {{block "js" .}}

    {{end}}
    </body>
    </html>
{{end}}